tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    mavenLocal()
    jcenter()
}

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.1")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: "org.sonarqube"

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'net.serenity-bdd:serenity-core:2.0.1'
    testImplementation 'net.serenity-bdd:serenity-junit:2.0.1'
    testImplementation('junit:junit:4.12')
    testImplementation('org.assertj:assertj-core:1.7.0')
    testImplementation('org.slf4j:slf4j-simple:1.7.7')

    implementation 'net.serenity-bdd:serenity-core:2.0.1'
    implementation 'net.serenity-bdd:serenity-junit:2.0.1'
    implementation 'net.serenity-bdd:serenity-cucumber:1.9.14'
    implementation 'net.serenity-bdd:serenity-screenplay:1.9.9'
    implementation 'net.serenity-bdd:serenity-screenplay-webdriver:1.9.9'
}

tasks.withType(Test) {
    systemProperty "cucumber.options", System.properties.getProperty("cucumber.options")
    useJUnit()
    gradle.startParameter.continueOnFailure = true
    test.finalizedBy(aggregate)
}